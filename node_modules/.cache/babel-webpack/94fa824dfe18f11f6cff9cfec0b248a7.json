{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/receptai.service\";\nimport * as i2 from \"@angular/router\";\n\nconst _c0 = function () {\n  return [\"/recipes-read\"];\n};\n\nexport let SkaitomiAprasymasComponent = /*#__PURE__*/(() => {\n  class SkaitomiAprasymasComponent {\n    constructor(receptaiService) {\n      this.receptaiService = receptaiService;\n    }\n\n    ngOnInit() {// let id=this.route.snapshot.params['id'];\n      // this.receptaiService.getReceptai().subscribe((response)=>{\n      //   this.receptai=response[this.id];\n      // });\n    }\n\n  }\n\n  SkaitomiAprasymasComponent.ɵfac = function SkaitomiAprasymasComponent_Factory(t) {\n    return new (t || SkaitomiAprasymasComponent)(i0.ɵɵdirectiveInject(i1.ReceptaiService));\n  };\n\n  SkaitomiAprasymasComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SkaitomiAprasymasComponent,\n    selectors: [[\"app-skaitomi-aprasymas\"]],\n    inputs: {\n      receptaiData: \"receptaiData\"\n    },\n    decls: 44,\n    vars: 2,\n    consts: [[1, \"col-md-12\"], [1, \"card\", \"mt-5\"], [1, \"card-header\"], [1, \"card-body\"], [\"id\", \"accordionExample\", 1, \"accordion\"], [1, \"accordion-item\"], [\"id\", \"headingOne\", 1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#collapseOne\", \"aria-expanded\", \"true\", \"aria-controls\", \"collapseOne\", 1, \"accordion-button\"], [\"id\", \"collapseOne\", \"aria-labelledby\", \"headingOne\", \"data-bs-parent\", \"#accordionExample\", 1, \"accordion-collapse\", \"collapse\", \"show\"], [1, \"accordion-body\"], [\"id\", \"headingTwo\", 1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#collapseTwo\", \"aria-expanded\", \"false\", \"aria-controls\", \"collapseTwo\", 1, \"accordion-button\", \"collapsed\"], [\"id\", \"collapseTwo\", \"aria-labelledby\", \"headingTwo\", \"data-bs-parent\", \"#accordionExample\", 1, \"accordion-collapse\", \"collapse\"], [\"id\", \"headingThree\", 1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#collapseThree\", \"aria-expanded\", \"false\", \"aria-controls\", \"collapseThree\", 1, \"accordion-button\", \"collapsed\"], [\"id\", \"collapseThree\", \"aria-labelledby\", \"headingThree\", \"data-bs-parent\", \"#accordionExample\", 1, \"accordion-collapse\", \"collapse\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"mt-3\", \"float-end\", 3, \"routerLink\"]],\n    template: function SkaitomiAprasymasComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtext(3, \"Recepto pavadinimas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelementStart(7, \"h2\", 6);\n        i0.ɵɵelementStart(8, \"button\", 7);\n        i0.ɵɵtext(9, \" Accordion Item #1 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 8);\n        i0.ɵɵelementStart(11, \"div\", 9);\n        i0.ɵɵelementStart(12, \"strong\");\n        i0.ɵɵtext(13, \"This is the first item's accordion body.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(14, \" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \");\n        i0.ɵɵelementStart(15, \"code\");\n        i0.ɵɵtext(16, \".accordion-body\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(17, \", though the transition does limit overflow. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 5);\n        i0.ɵɵelementStart(19, \"h2\", 10);\n        i0.ɵɵelementStart(20, \"button\", 11);\n        i0.ɵɵtext(21, \" Accordion Item #2 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 12);\n        i0.ɵɵelementStart(23, \"div\", 9);\n        i0.ɵɵelementStart(24, \"strong\");\n        i0.ɵɵtext(25, \"This is the second item's accordion body.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(26, \" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \");\n        i0.ɵɵelementStart(27, \"code\");\n        i0.ɵɵtext(28, \".accordion-body\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(29, \", though the transition does limit overflow. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 5);\n        i0.ɵɵelementStart(31, \"h2\", 13);\n        i0.ɵɵelementStart(32, \"button\", 14);\n        i0.ɵɵtext(33, \" Accordion Item #3 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 15);\n        i0.ɵɵelementStart(35, \"div\", 9);\n        i0.ɵɵelementStart(36, \"strong\");\n        i0.ɵɵtext(37, \"This is the third item's accordion body.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(38, \" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \");\n        i0.ɵɵelementStart(39, \"code\");\n        i0.ɵɵtext(40, \".accordion-body\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(41, \", though the transition does limit overflow. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"button\", 16);\n        i0.ɵɵtext(43, \"Atgal\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(42);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(1, _c0));\n      }\n    },\n    directives: [i2.RouterLink],\n    styles: [\"\"]\n  });\n  return SkaitomiAprasymasComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}