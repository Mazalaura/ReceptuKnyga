{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport { tap } from 'rxjs/operators';\nimport { User } from \"./user.model\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.userSub = new BehaviorSubject(null);\n    }\n\n    userAuth(response) {\n      this.user = new User(response.email, response.localId, response.idToken, new Date(new Date().getTime() + +response.expiresIn * 1000));\n      this.userSub.next(this.user);\n      localStorage.setItem('user', JSON.stringify(this.user));\n    }\n\n    signup(email, password) {\n      return this.http.post(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDfRQkltl2iI1YGSOuQrNT-4VCQydOdyMw\", {\n        email: email,\n        password: password,\n        returnSecureToken: true\n      }).pipe(tap(response => {\n        this.userAuth(response);\n      }));\n    }\n\n    login(email, password) {\n      return this.http.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDfRQkltl2iI1YGSOuQrNT-4VCQydOdyMw', {\n        email: email,\n        password: password,\n        returnSecureToken: true\n      }).pipe(tap(response => {\n        this.userAuth(response);\n      }));\n    }\n\n    savedLogin() {\n      const user = JSON.parse(localStorage.getItem('user'));\n      if (!user) return;\n      if (new Date(user.expires) < new Date()) return;\n      this.user = new User(user.email, user.id, user.token, new Date(user.expires));\n      this.userSub.next(this.user);\n      this.router.navigate(['/']);\n    }\n\n    logout() {\n      this.user = null;\n      this.userSub.next(null);\n      localStorage.removeItem('user');\n      this.router.navigate(['/auth']);\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}